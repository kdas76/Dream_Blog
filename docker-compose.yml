# version: "3.8"

# services:
#   backend:
#     build: ./backend
#     container_name: dream_backend
#     ports:
#       - "5000:5000"
#     env_file:
#       - ./backend/.env
#     depends_on:
#       - db
#     environment:
#       PG_HOST: db   # override localhost â†’ service name
#     restart: unless-stopped

#   frontend:
#     build: ./frontend
#     container_name: dream_frontend
#     ports:
#       - "3000:3000"
#     depends_on:
#       - backend
#     restart: unless-stopped

#   db:
#     image: postgres:15
#     container_name: dream_db
#     restart: always
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: root
#       POSTGRES_DB: blog_database
#     ports:
#       - "5432:5432"
#     volumes:
#       - pgdata:/var/lib/postgresql/data

# volumes:
#   pgdata:



version: "3.8"

services:
  db:
    image: postgres:15
    container_name: dream_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: blog_database
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d blog_database"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./server
    container_name: dream_backend
    ports:
      - "5000:5000"
    env_file:
      - ./server/.env
    depends_on:
      db:
        condition: service_healthy
    environment:
      - PG_HOST=db
    restart: unless-stopped

  frontend:
    build: ./My-blog-page
    container_name: dream_frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  pgdata:
